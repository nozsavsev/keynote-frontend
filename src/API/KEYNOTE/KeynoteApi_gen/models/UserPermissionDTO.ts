/* tslint:disable */
/* eslint-disable */
/**
 * ketnote-asp
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PermissionBasicDTO } from './PermissionBasicDTO';
import {
    PermissionBasicDTOFromJSON,
    PermissionBasicDTOFromJSONTyped,
    PermissionBasicDTOToJSON,
    PermissionBasicDTOToJSONTyped,
} from './PermissionBasicDTO';

/**
 * 
 * @export
 * @interface UserPermissionDTO
 */
export interface UserPermissionDTO {
    /**
     * 
     * @type {Date}
     * @memberof UserPermissionDTO
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof UserPermissionDTO
     */
    id?: string | null;
    /**
     * 
     * @type {PermissionBasicDTO}
     * @memberof UserPermissionDTO
     */
    permission?: PermissionBasicDTO;
    /**
     * 
     * @type {string}
     * @memberof UserPermissionDTO
     */
    permissionId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserPermissionDTO
     */
    userId?: string | null;
}

/**
 * Check if a given object implements the UserPermissionDTO interface.
 */
export function instanceOfUserPermissionDTO(value: object): value is UserPermissionDTO {
    return true;
}

export function UserPermissionDTOFromJSON(json: any): UserPermissionDTO {
    return UserPermissionDTOFromJSONTyped(json, false);
}

export function UserPermissionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPermissionDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'id': json['id'] == null ? undefined : json['id'],
        'permission': json['permission'] == null ? undefined : PermissionBasicDTOFromJSON(json['permission']),
        'permissionId': json['permissionId'] == null ? undefined : json['permissionId'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}

export function UserPermissionDTOToJSON(json: any): UserPermissionDTO {
    return UserPermissionDTOToJSONTyped(json, false);
}

export function UserPermissionDTOToJSONTyped(value?: UserPermissionDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'createdAt': value['createdAt'] === null ? null : ((value['createdAt'] as any)?.toISOString()),
        'id': value['id'],
        'permission': PermissionBasicDTOToJSON(value['permission']),
        'permissionId': value['permissionId'],
        'userId': value['userId'],
    };
}

