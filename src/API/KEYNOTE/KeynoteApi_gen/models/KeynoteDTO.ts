/* tslint:disable */
/* eslint-disable */
/**
 * ketnote-asp
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { KeynoteTransitionType } from './KeynoteTransitionType';
import {
    KeynoteTransitionTypeFromJSON,
    KeynoteTransitionTypeFromJSONTyped,
    KeynoteTransitionTypeToJSON,
    KeynoteTransitionTypeToJSONTyped,
} from './KeynoteTransitionType';
import type { KeynoteType } from './KeynoteType';
import {
    KeynoteTypeFromJSON,
    KeynoteTypeFromJSONTyped,
    KeynoteTypeToJSON,
    KeynoteTypeToJSONTyped,
} from './KeynoteType';

/**
 * 
 * @export
 * @interface KeynoteDTO
 */
export interface KeynoteDTO {
    /**
     * 
     * @type {string}
     * @memberof KeynoteDTO
     */
    id?: string | null;
    /**
     * 
     * @type {KeynoteTransitionType}
     * @memberof KeynoteDTO
     */
    transitionType?: KeynoteTransitionType;
    /**
     * 
     * @type {KeynoteType}
     * @memberof KeynoteDTO
     */
    type?: KeynoteType;
    /**
     * 
     * @type {number}
     * @memberof KeynoteDTO
     */
    totalFrames?: number;
    /**
     * 
     * @type {string}
     * @memberof KeynoteDTO
     */
    keynoteUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof KeynoteDTO
     */
    mobileKeynoteUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof KeynoteDTO
     */
    presentorNotesUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof KeynoteDTO
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof KeynoteDTO
     */
    description?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof KeynoteDTO
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof KeynoteDTO
     */
    userId?: string | null;
}



/**
 * Check if a given object implements the KeynoteDTO interface.
 */
export function instanceOfKeynoteDTO(value: object): value is KeynoteDTO {
    return true;
}

export function KeynoteDTOFromJSON(json: any): KeynoteDTO {
    return KeynoteDTOFromJSONTyped(json, false);
}

export function KeynoteDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeynoteDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'transitionType': json['transitionType'] == null ? undefined : KeynoteTransitionTypeFromJSON(json['transitionType']),
        'type': json['type'] == null ? undefined : KeynoteTypeFromJSON(json['type']),
        'totalFrames': json['totalFrames'] == null ? undefined : json['totalFrames'],
        'keynoteUrl': json['keynoteUrl'] == null ? undefined : json['keynoteUrl'],
        'mobileKeynoteUrl': json['mobileKeynoteUrl'] == null ? undefined : json['mobileKeynoteUrl'],
        'presentorNotesUrl': json['presentorNotesUrl'] == null ? undefined : json['presentorNotesUrl'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}

export function KeynoteDTOToJSON(json: any): KeynoteDTO {
    return KeynoteDTOToJSONTyped(json, false);
}

export function KeynoteDTOToJSONTyped(value?: KeynoteDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'transitionType': KeynoteTransitionTypeToJSON(value['transitionType']),
        'type': KeynoteTypeToJSON(value['type']),
        'totalFrames': value['totalFrames'],
        'keynoteUrl': value['keynoteUrl'],
        'mobileKeynoteUrl': value['mobileKeynoteUrl'],
        'presentorNotesUrl': value['presentorNotesUrl'],
        'name': value['name'],
        'description': value['description'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'userId': value['userId'],
    };
}

