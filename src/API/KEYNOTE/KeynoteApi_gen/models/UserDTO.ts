/* tslint:disable */
/* eslint-disable */
/**
 * ketnote-asp
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmailActionDTO } from './EmailActionDTO';
import {
    EmailActionDTOFromJSON,
    EmailActionDTOFromJSONTyped,
    EmailActionDTOToJSON,
    EmailActionDTOToJSONTyped,
} from './EmailActionDTO';
import type { SessionDTO } from './SessionDTO';
import {
    SessionDTOFromJSON,
    SessionDTOFromJSONTyped,
    SessionDTOToJSON,
    SessionDTOToJSONTyped,
} from './SessionDTO';
import type { Model2FAEntryDTO } from './Model2FAEntryDTO';
import {
    Model2FAEntryDTOFromJSON,
    Model2FAEntryDTOFromJSONTyped,
    Model2FAEntryDTOToJSON,
    Model2FAEntryDTOToJSONTyped,
} from './Model2FAEntryDTO';
import type { ServiceDTO } from './ServiceDTO';
import {
    ServiceDTOFromJSON,
    ServiceDTOFromJSONTyped,
    ServiceDTOToJSON,
    ServiceDTOToJSONTyped,
} from './ServiceDTO';
import type { UserPermissionDTO } from './UserPermissionDTO';
import {
    UserPermissionDTOFromJSON,
    UserPermissionDTOFromJSONTyped,
    UserPermissionDTOToJSON,
    UserPermissionDTOToJSONTyped,
} from './UserPermissionDTO';

/**
 * 
 * @export
 * @interface UserDTO
 */
export interface UserDTO {
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    avatarURL?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof UserDTO
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    email?: string | null;
    /**
     * 
     * @type {Array<EmailActionDTO>}
     * @memberof UserDTO
     */
    emailActions?: Array<EmailActionDTO> | null;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    id?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserDTO
     */
    isEmailVerified?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserDTO
     */
    isEnabled?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    name?: string | null;
    /**
     * 
     * @type {Array<UserPermissionDTO>}
     * @memberof UserDTO
     */
    permissions?: Array<UserPermissionDTO> | null;
    /**
     * 
     * @type {Array<ServiceDTO>}
     * @memberof UserDTO
     */
    services?: Array<ServiceDTO> | null;
    /**
     * 
     * @type {Array<SessionDTO>}
     * @memberof UserDTO
     */
    sessions?: Array<SessionDTO> | null;
    /**
     * 
     * @type {Array<Model2FAEntryDTO>}
     * @memberof UserDTO
     */
    twoFactorAuthEntries?: Array<Model2FAEntryDTO> | null;
}

/**
 * Check if a given object implements the UserDTO interface.
 */
export function instanceOfUserDTO(value: object): value is UserDTO {
    return true;
}

export function UserDTOFromJSON(json: any): UserDTO {
    return UserDTOFromJSONTyped(json, false);
}

export function UserDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'avatarURL': json['avatarURL'] == null ? undefined : json['avatarURL'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'email': json['email'] == null ? undefined : json['email'],
        'emailActions': json['emailActions'] == null ? undefined : ((json['emailActions'] as Array<any>).map(EmailActionDTOFromJSON)),
        'id': json['id'] == null ? undefined : json['id'],
        'isEmailVerified': json['isEmailVerified'] == null ? undefined : json['isEmailVerified'],
        'isEnabled': json['isEnabled'] == null ? undefined : json['isEnabled'],
        'name': json['name'] == null ? undefined : json['name'],
        'permissions': json['permissions'] == null ? undefined : ((json['permissions'] as Array<any>).map(UserPermissionDTOFromJSON)),
        'services': json['services'] == null ? undefined : ((json['services'] as Array<any>).map(ServiceDTOFromJSON)),
        'sessions': json['sessions'] == null ? undefined : ((json['sessions'] as Array<any>).map(SessionDTOFromJSON)),
        'twoFactorAuthEntries': json['twoFactorAuthEntries'] == null ? undefined : ((json['twoFactorAuthEntries'] as Array<any>).map(Model2FAEntryDTOFromJSON)),
    };
}

export function UserDTOToJSON(json: any): UserDTO {
    return UserDTOToJSONTyped(json, false);
}

export function UserDTOToJSONTyped(value?: UserDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'avatarURL': value['avatarURL'],
        'createdAt': value['createdAt'] === null ? null : ((value['createdAt'] as any)?.toISOString()),
        'email': value['email'],
        'emailActions': value['emailActions'] == null ? undefined : ((value['emailActions'] as Array<any>).map(EmailActionDTOToJSON)),
        'id': value['id'],
        'isEmailVerified': value['isEmailVerified'],
        'isEnabled': value['isEnabled'],
        'name': value['name'],
        'permissions': value['permissions'] == null ? undefined : ((value['permissions'] as Array<any>).map(UserPermissionDTOToJSON)),
        'services': value['services'] == null ? undefined : ((value['services'] as Array<any>).map(ServiceDTOToJSON)),
        'sessions': value['sessions'] == null ? undefined : ((value['sessions'] as Array<any>).map(SessionDTOToJSON)),
        'twoFactorAuthEntries': value['twoFactorAuthEntries'] == null ? undefined : ((value['twoFactorAuthEntries'] as Array<any>).map(Model2FAEntryDTOToJSON)),
    };
}

