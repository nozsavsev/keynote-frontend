/* tslint:disable */
/* eslint-disable */
/**
 * ketnote-asp
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { TRScreenDTO } from "./TRScreenDTO";
import { TRScreenDTOFromJSON, TRScreenDTOFromJSONTyped, TRScreenDTOToJSON, TRScreenDTOToJSONTyped } from "./TRScreenDTO";
import type { TRSpectatorDTO } from "./TRSpectatorDTO";
import { TRSpectatorDTOFromJSON, TRSpectatorDTOFromJSONTyped, TRSpectatorDTOToJSON, TRSpectatorDTOToJSONTyped } from "./TRSpectatorDTO";
import type { DBKeynote } from "./DBKeynote";
import { DBKeynoteFromJSON, DBKeynoteFromJSONTyped, DBKeynoteToJSON, DBKeynoteToJSONTyped } from "./DBKeynote";
import type { TRPresentorDTO } from "./TRPresentorDTO";
import { TRPresentorDTOFromJSON, TRPresentorDTOFromJSONTyped, TRPresentorDTOToJSON, TRPresentorDTOToJSONTyped } from "./TRPresentorDTO";

/**
 *
 * @export
 * @interface TRRoomDTO
 */
export interface TRRoomDTO {
  /**
   *
   * @type {string}
   * @memberof TRRoomDTO
   */
  identifier?: string | null;
  /**
   *
   * @type {string}
   * @memberof TRRoomDTO
   */
  roomCode?: string | null;
  /**
   *
   * @type {DBKeynote}
   * @memberof TRRoomDTO
   */
  keynote?: DBKeynote;
  /**
   *
   * @type {number}
   * @memberof TRRoomDTO
   */
  currentFrame?: number;
  /**
   *
   * @type {boolean}
   * @memberof TRRoomDTO
   */
  showSpectatorQR?: boolean;
  /**
   *
   * @type {string}
   * @memberof TRRoomDTO
   */
  tempControlSpectatorId?: string | null;
  /**
   *
   * @type {TRPresentorDTO}
   * @memberof TRRoomDTO
   */
  presentor?: TRPresentorDTO;
  /**
   *
   * @type {TRScreenDTO}
   * @memberof TRRoomDTO
   */
  screen?: TRScreenDTO;
  /**
   *
   * @type {Array<TRSpectatorDTO>}
   * @memberof TRRoomDTO
   */
  spectators?: Array<TRSpectatorDTO> | null;
}

/**
 * Check if a given object implements the TRRoomDTO interface.
 */
export function instanceOfTRRoomDTO(value: object): value is TRRoomDTO {
  return true;
}

export function TRRoomDTOFromJSON(json: any): TRRoomDTO {
  return TRRoomDTOFromJSONTyped(json, false);
}

export function TRRoomDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TRRoomDTO {
  if (json == null) {
    return json;
  }
  return {
    identifier: json["identifier"] == null ? undefined : json["identifier"],
    roomCode: json["roomCode"] == null ? undefined : json["roomCode"],
    keynote: json["keynote"] == null ? undefined : DBKeynoteFromJSON(json["keynote"]),
    currentFrame: json["currentFrame"] == null ? undefined : json["currentFrame"],
    showSpectatorQR: json["showSpectatorQR"] == null ? undefined : json["showSpectatorQR"],
    tempControlSpectatorId: json["tempControlSpectatorId"] == null ? undefined : json["tempControlSpectatorId"],
    presentor: json["presentor"] == null ? undefined : TRPresentorDTOFromJSON(json["presentor"]),
    screen: json["screen"] == null ? undefined : TRScreenDTOFromJSON(json["screen"]),
    spectators: json["spectators"] == null ? undefined : (json["spectators"] as Array<any>).map(TRSpectatorDTOFromJSON),
  };
}

export function TRRoomDTOToJSON(json: any): TRRoomDTO {
  return TRRoomDTOToJSONTyped(json, false);
}

export function TRRoomDTOToJSONTyped(value?: TRRoomDTO | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    identifier: value["identifier"],
    roomCode: value["roomCode"],
    keynote: DBKeynoteToJSON(value["keynote"]),
    currentFrame: value["currentFrame"],
    showSpectatorQR: value["showSpectatorQR"],
    tempControlSpectatorId: value["tempControlSpectatorId"],
    presentor: TRPresentorDTOToJSON(value["presentor"]),
    screen: TRScreenDTOToJSON(value["screen"]),
    spectators: value["spectators"] == null ? undefined : (value["spectators"] as Array<any>).map(TRSpectatorDTOToJSON),
  };
}
