/* tslint:disable */
/* eslint-disable */
/**
 * ketnote-asp
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TRScreenDTO } from './TRScreenDTO';
import {
    TRScreenDTOFromJSON,
    TRScreenDTOFromJSONTyped,
    TRScreenDTOToJSON,
    TRScreenDTOToJSONTyped,
} from './TRScreenDTO';
import type { TRSpectatorDTO } from './TRSpectatorDTO';
import {
    TRSpectatorDTOFromJSON,
    TRSpectatorDTOFromJSONTyped,
    TRSpectatorDTOToJSON,
    TRSpectatorDTOToJSONTyped,
} from './TRSpectatorDTO';
import type { TRPresentorDTO } from './TRPresentorDTO';
import {
    TRPresentorDTOFromJSON,
    TRPresentorDTOFromJSONTyped,
    TRPresentorDTOToJSON,
    TRPresentorDTOToJSONTyped,
} from './TRPresentorDTO';
import type { TRBaseEntityDTO } from './TRBaseEntityDTO';
import {
    TRBaseEntityDTOFromJSON,
    TRBaseEntityDTOFromJSONTyped,
    TRBaseEntityDTOToJSON,
    TRBaseEntityDTOToJSONTyped,
} from './TRBaseEntityDTO';
import type { TRRoomDTO } from './TRRoomDTO';
import {
    TRRoomDTOFromJSON,
    TRRoomDTOFromJSONTyped,
    TRRoomDTOToJSON,
    TRRoomDTOToJSONTyped,
} from './TRRoomDTO';

/**
 * 
 * @export
 * @interface RoomDtosResponse
 */
export interface RoomDtosResponse {
    /**
     * 
     * @type {TRRoomDTO}
     * @memberof RoomDtosResponse
     */
    room?: TRRoomDTO;
    /**
     * 
     * @type {TRPresentorDTO}
     * @memberof RoomDtosResponse
     */
    presentor?: TRPresentorDTO;
    /**
     * 
     * @type {TRScreenDTO}
     * @memberof RoomDtosResponse
     */
    screen?: TRScreenDTO;
    /**
     * 
     * @type {TRSpectatorDTO}
     * @memberof RoomDtosResponse
     */
    spectator?: TRSpectatorDTO;
    /**
     * 
     * @type {TRBaseEntityDTO}
     * @memberof RoomDtosResponse
     */
    baseEntity?: TRBaseEntityDTO;
}

/**
 * Check if a given object implements the RoomDtosResponse interface.
 */
export function instanceOfRoomDtosResponse(value: object): value is RoomDtosResponse {
    return true;
}

export function RoomDtosResponseFromJSON(json: any): RoomDtosResponse {
    return RoomDtosResponseFromJSONTyped(json, false);
}

export function RoomDtosResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomDtosResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'room': json['room'] == null ? undefined : TRRoomDTOFromJSON(json['room']),
        'presentor': json['presentor'] == null ? undefined : TRPresentorDTOFromJSON(json['presentor']),
        'screen': json['screen'] == null ? undefined : TRScreenDTOFromJSON(json['screen']),
        'spectator': json['spectator'] == null ? undefined : TRSpectatorDTOFromJSON(json['spectator']),
        'baseEntity': json['baseEntity'] == null ? undefined : TRBaseEntityDTOFromJSON(json['baseEntity']),
    };
}

export function RoomDtosResponseToJSON(json: any): RoomDtosResponse {
    return RoomDtosResponseToJSONTyped(json, false);
}

export function RoomDtosResponseToJSONTyped(value?: RoomDtosResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'room': TRRoomDTOToJSON(value['room']),
        'presentor': TRPresentorDTOToJSON(value['presentor']),
        'screen': TRScreenDTOToJSON(value['screen']),
        'spectator': TRSpectatorDTOToJSON(value['spectator']),
        'baseEntity': TRBaseEntityDTOToJSON(value['baseEntity']),
    };
}

