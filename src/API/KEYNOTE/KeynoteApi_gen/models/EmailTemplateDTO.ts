/* tslint:disable */
/* eslint-disable */
/**
 * ketnote-asp
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { EmailTemplateType } from "./EmailTemplateType";
import {
  EmailTemplateTypeFromJSON,
  EmailTemplateTypeFromJSONTyped,
  EmailTemplateTypeToJSON,
  EmailTemplateTypeToJSONTyped,
} from "./EmailTemplateType";

/**
 *
 * @export
 * @interface EmailTemplateDTO
 */
export interface EmailTemplateDTO {
  /**
   *
   * @type {string}
   * @memberof EmailTemplateDTO
   */
  body?: string | null;
  /**
   *
   * @type {Date}
   * @memberof EmailTemplateDTO
   */
  createdAt?: Date | null;
  /**
   *
   * @type {string}
   * @memberof EmailTemplateDTO
   */
  htmlBody?: string | null;
  /**
   *
   * @type {string}
   * @memberof EmailTemplateDTO
   */
  id?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof EmailTemplateDTO
   */
  isActive?: boolean | null;
  /**
   *
   * @type {string}
   * @memberof EmailTemplateDTO
   */
  name?: string | null;
  /**
   *
   * @type {string}
   * @memberof EmailTemplateDTO
   */
  subject?: string | null;
  /**
   *
   * @type {EmailTemplateType}
   * @memberof EmailTemplateDTO
   */
  type?: EmailTemplateType;
}

/**
 * Check if a given object implements the EmailTemplateDTO interface.
 */
export function instanceOfEmailTemplateDTO(value: object): value is EmailTemplateDTO {
  return true;
}

export function EmailTemplateDTOFromJSON(json: any): EmailTemplateDTO {
  return EmailTemplateDTOFromJSONTyped(json, false);
}

export function EmailTemplateDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailTemplateDTO {
  if (json == null) {
    return json;
  }
  return {
    body: json["body"] == null ? undefined : json["body"],
    createdAt: json["createdAt"] == null ? undefined : new Date(json["createdAt"]),
    htmlBody: json["htmlBody"] == null ? undefined : json["htmlBody"],
    id: json["id"] == null ? undefined : json["id"],
    isActive: json["isActive"] == null ? undefined : json["isActive"],
    name: json["name"] == null ? undefined : json["name"],
    subject: json["subject"] == null ? undefined : json["subject"],
    type: json["type"] == null ? undefined : EmailTemplateTypeFromJSON(json["type"]),
  };
}

export function EmailTemplateDTOToJSON(json: any): EmailTemplateDTO {
  return EmailTemplateDTOToJSONTyped(json, false);
}

export function EmailTemplateDTOToJSONTyped(value?: EmailTemplateDTO | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    body: value["body"],
    createdAt: value["createdAt"] === null ? null : (value["createdAt"] as any)?.toISOString(),
    htmlBody: value["htmlBody"],
    id: value["id"],
    isActive: value["isActive"],
    name: value["name"],
    subject: value["subject"],
    type: EmailTemplateTypeToJSON(value["type"]),
  };
}
